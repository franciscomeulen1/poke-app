{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Navbar } from \"../components/Navbar\";\nimport Buscador from \"../components/Searchbar\";\nimport Pokemon from \"../components/Pokemon\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport axios from 'axios';\nvar urlImage = 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/';\nvar useState = React.useState,\n    useEffect = React.useEffect;\nexport var PokemonsScreen = function (_Component) {\n  _inherits(PokemonsScreen, _Component);\n\n  var _super = _createSuper(PokemonsScreen);\n\n  function PokemonsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, PokemonsScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getPokemons = function _callee() {\n      var limit,\n          offset,\n          _args = arguments;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              limit = _args.length > 0 && _args[0] !== undefined ? _args[0] : 20;\n              offset = _args.length > 1 && _args[1] !== undefined ? _args[1] : 0;\n              axios.get(\"https://pokeapi.co/api/v2/pokemon?limit=\" + limit + \"&offset=\" + offset).then(function (response) {\n                console.log(response.data.results);\n\n                _this.setPokemons(response.data.results);\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      var url = item.url;\n      var idPokemon = url.split('https://pokeapi.co/api/v2/pokemon/');\n      var link = urlImage + idPokemon[1].substring(0, idPokemon[1].length - 1) + \".svg\";\n      console.log('link', link);\n      return React.createElement(View, {\n        style: styles.item\n      }, React.createElement(Image, {\n        style: styles.image,\n        resizeMode: \"contain\",\n        source: {\n          uri: link\n        }\n      }), React.createElement(Text, {\n        style: styles.pagi\n      }, item.name));\n    };\n\n    _this.state = {\n      pokemons: []\n    };\n\n    _this.getPokemons();\n\n    return _this;\n  }\n\n  _createClass(PokemonsScreen, [{\n    key: \"setPokemons\",\n    value: function setPokemons(pokes) {\n      this.setState({\n        pokemons: pokes\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaView, {\n        style: styles.container\n      }, React.createElement(Navbar, null), React.createElement(Buscador, {\n        style: styles.buscador\n      }), React.createElement(View, null, React.createElement(View, {\n        style: styles.header\n      }, React.createElement(Text, {\n        style: styles.poke\n      }, \"Pokedex\"), React.createElement(Text, {\n        style: styles.pagi\n      }, \"Pagination\")), React.createElement(FlatList, {\n        style: styles.flatlist,\n        numColumns: 2,\n        data: this.state.pokemons,\n        renderItem: this.renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return \"key-\" + item.name;\n        }\n      })));\n    }\n  }]);\n\n  return PokemonsScreen;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#141414',\n    padding: 20,\n    flex: 1\n  },\n  header: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 10,\n    color: '#FFFFFF'\n  },\n  poke: {\n    color: '#FFFFFF',\n    fontSize: 30\n  },\n  pagi: {\n    color: '#FFFFFF'\n  },\n  list: {\n    width: '90%',\n    color: '#FFFFFF'\n  },\n  item: {\n    flex: 1,\n    color: '#FFFFFF'\n  },\n  flatlist: {\n    flex: 1\n  },\n  image: {\n    width: 100,\n    height: 100\n  }\n});","map":{"version":3,"sources":["C:/Users/franc/Desktop/4to Cuatri - Da Vinci/Aplicaciones MÃ³viles/poke-app/Screens/PokemonsScreen.js"],"names":["React","Component","Navbar","Buscador","Pokemon","SafeAreaView","axios","urlImage","useState","useEffect","PokemonsScreen","props","getPokemons","limit","offset","get","then","response","console","log","data","results","setPokemons","catch","err","renderItem","item","index","url","idPokemon","split","link","substring","length","styles","image","uri","pagi","name","state","pokemons","pokes","setState","container","buscador","header","poke","flatlist","StyleSheet","create","backgroundColor","padding","flex","display","flexDirection","justifyContent","alignItems","color","fontSize","list","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// Cuando cargue la app, quiero hacer una peticion GET --> Usamos useEffect\r\nimport { View, Text, StyleSheet, StatusBar, FlatList, PanResponder, Image} from 'react-native';\r\nimport { Navbar } from '../components/Navbar';\r\nimport Buscador from '../components/Searchbar';\r\nimport Pokemon from '../components/Pokemon';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport axios from 'axios';\r\n\r\nconst urlImage = 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/';\r\nconst {useState, useEffect} = React;\r\n\r\nexport class PokemonsScreen extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = { pokemons: [] };\r\n    //this.fetchPokemons();\r\n    this.getPokemons();\r\n  }\r\n\r\n  setPokemons(pokes) {\r\n    this.setState({ pokemons: pokes });\r\n  }\r\n\r\n  getPokemons = async (limit=20, offset=0) => {\r\n      axios.get(`https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`)\r\n      .then((response) => {\r\n        console.log(response.data.results);\r\n        this.setPokemons(response.data.results);\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  renderItem = ({item, index}) =>{\r\n    let url = item.url;\r\n    const idPokemon = url.split('https://pokeapi.co/api/v2/pokemon/');\r\n    //console.log(idPokemon);\r\n    const link = urlImage + idPokemon[1].substring(0, idPokemon[1].length-1) + \".svg\";\r\n    console.log('link', link);\r\n    return <View style={styles.item}>\r\n      <Image \r\n          style={styles.image}\r\n          resizeMode='contain'\r\n          source={{uri:link}}\r\n      />\r\n      <Text style={styles.pagi}>{item.name}</Text>\r\n    </View>\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <SafeAreaView style={styles.container}>\r\n        <Navbar />\r\n        <Buscador style={styles.buscador} />\r\n      <View>\r\n      <View style={styles.header}>\r\n        <Text style={styles.poke}>Pokedex</Text>\r\n        <Text style={styles.pagi}>Pagination</Text>\r\n     </View>\r\n     <FlatList\r\n     style={styles.flatlist}\r\n        numColumns = {2}\r\n        data = {this.state.pokemons}\r\n        renderItem = {this.renderItem}\r\n        keyExtractor={item => `key-${item.name}`}\r\n     />\r\n       \r\n    </View>\r\n    </SafeAreaView>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#141414',\r\n    padding: 20,\r\n    flex: 1 // Para que me ocupe todo el tamanio de la pantalla \r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    color: '#FFFFFF'\r\n\r\n},\r\npoke:{\r\n    color: '#FFFFFF',\r\n    fontSize: 30\r\n},\r\npagi:{\r\n    color: '#FFFFFF'\r\n},\r\nlist:{\r\n    width: '90%',\r\n    color: '#FFFFFF'\r\n},\r\nitem:{\r\n  flex: 1,\r\n  color:'#FFFFFF'\r\n},\r\nflatlist:{\r\n  flex: 1,\r\n\r\n\r\n},\r\nimage: {\r\n  width: 100,\r\n  height: 100\r\n}\r\n});"]},"metadata":{},"sourceType":"module"}