{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport { Navbar } from \"../components/Navbar\";\nimport Buscador from \"../components/Searchbar\";\nvar useState = React.useState,\n    useEffect = React.useEffect;\n\nvar PokemonsScreen = function PokemonsScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      pokemons = _useState2[0],\n      setPokemons = _useState2[1];\n\n  var getPokemons = function getPokemons() {\n    var limit,\n        offset,\n        url,\n        response,\n        data,\n        _args = arguments;\n    return _regeneratorRuntime.async(function getPokemons$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            limit = _args.length > 0 && _args[0] !== undefined ? _args[0] : 10;\n            offset = _args.length > 1 && _args[1] !== undefined ? _args[1] : 0;\n            _context.prev = 2;\n            url = \"https://pokeapi.co/api/v2/pokemon/?limit=\" + limit + \"&offset=\" + offset;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetch(url));\n\n          case 6:\n            response = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](2);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 13]], Promise);\n  };\n\n  var fetchPokemons = function fetchPokemons() {\n    var data;\n    return _regeneratorRuntime.async(function fetchPokemons$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(getPokemons());\n\n          case 3:\n            data = _context2.sent;\n            console.log(data);\n            _context2.next = 9;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    getPokemons();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Navbar, null), React.createElement(Buscador, {\n    style: styles.buscador\n  }), React.createElement(View, null, React.createElement(View, {\n    style: styles.header\n  }, React.createElement(Text, {\n    style: styles.poke\n  }, \"Pokedex\"), React.createElement(Text, {\n    style: styles.pagi\n  }, \"Pagination\")), React.createElement(FlatList, {\n    style: styles.list\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#141414',\n    padding: 20,\n    flex: 1\n  },\n  header: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 10\n  },\n  poke: {\n    color: '#FFFFFF',\n    fontSize: 30\n  },\n  pagi: {\n    color: '#FFFFFF'\n  },\n  list: {\n    width: '90%',\n    color: '#FFFFFF'\n  }\n});\nexport default PokemonsScreen;","map":{"version":3,"sources":["C:/Users/franc/Desktop/4to Cuatri - Da Vinci/Aplicaciones MÃ³viles/poke-app/Screens/PokemonsScreen.js"],"names":["React","Component","Navbar","Buscador","useState","useEffect","PokemonsScreen","pokemons","setPokemons","getPokemons","limit","offset","url","fetch","response","json","data","fetchPokemons","console","log","styles","container","buscador","header","poke","pagi","list","StyleSheet","create","backgroundColor","padding","flex","display","flexDirection","justifyContent","alignItems","color","fontSize","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;AAIA,SAASC,MAAT;AACA,OAAOC,QAAP;AAEA,IAAOC,QAAP,GAA8BJ,KAA9B,CAAOI,QAAP;AAAA,IAAiBC,SAAjB,GAA8BL,KAA9B,CAAiBK,SAAjB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAE5B,kBAAgCF,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAiBC,WAAjB;;AAEC,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,YAAAA,KAAP,2DAAa,EAAb;AAAiBC,YAAAA,MAAjB,2DAAwB,CAAxB;AAAA;AAEZC,YAAAA,GAFY,iDAEsCF,KAFtC,gBAEsDC,MAFtD;AAAA;AAAA,6CAGOE,KAAK,CAACD,GAAD,CAHZ;;AAAA;AAGVE,YAAAA,QAHU;AAAA;AAAA,6CAIGA,QAAQ,CAACC,IAAT,EAJH;;AAAA;AAIVC,YAAAA,IAJU;AAAA,6CAKTA,IALS;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AASA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAECR,WAAW,EAFZ;;AAAA;AAEZO,YAAAA,IAFY;AAGlBE,YAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAHkB;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAQAX,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIE,SAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEW,MAAM,CAACC;AAApB,KACE,oBAAC,MAAD,OADF,EAEE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAED,MAAM,CAACE;AAAxB,IAFF,EAGA,oBAAC,IAAD,QACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,eADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK;AAApB,kBAFF,CADA,EAKC,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,MAAM,CAACM;AAAxB,IALD,CAHA,CAFF;AAgBD,CAzCH;;AA4CA,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,eAAe,EAAE,SADR;AAETC,IAAAA,OAAO,EAAE,EAFA;AAGTC,IAAAA,IAAI,EAAE;AAHG,GADoB;AAM/BR,EAAAA,MAAM,EAAE;AACNS,IAAAA,OAAO,EAAE,MADH;AAENC,IAAAA,aAAa,EAAE,KAFT;AAGNC,IAAAA,cAAc,EAAE,eAHV;AAINC,IAAAA,UAAU,EAAE,QAJN;AAKNL,IAAAA,OAAO,EAAE;AALH,GANuB;AAcjCN,EAAAA,IAAI,EAAC;AACDY,IAAAA,KAAK,EAAE,SADN;AAEDC,IAAAA,QAAQ,EAAE;AAFT,GAd4B;AAkBjCZ,EAAAA,IAAI,EAAC;AACDW,IAAAA,KAAK,EAAE;AADN,GAlB4B;AAqBjCV,EAAAA,IAAI,EAAC;AACDY,IAAAA,KAAK,EAAE,KADN;AAEDF,IAAAA,KAAK,EAAE;AAFN;AArB4B,CAAlB,CAAf;AA2BA,eAAe9B,cAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// Cuando cargue la app, quiero hacer una peticion GET --> Usamos useEffect\r\nimport { View, Text, StyleSheet, StatusBar, FlatList, PanResponder } from 'react-native';\r\nimport { Navbar } from '../components/Navbar';\r\nimport Buscador from '../components/Searchbar';\r\n\r\nconst {useState, useEffect} = React;\r\n\r\nconst PokemonsScreen = () => {\r\n\r\n const [pokemons, setPokemons] = useState([]);\r\n\r\n  const getPokemons = async (limit=10, offset=0) => {\r\n    try {\r\n      let url = `https://pokeapi.co/api/v2/pokemon/?limit=${limit}&offset=${offset}`;\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (err) {\r\n    }\r\n  }\r\n  const fetchPokemons = async () =>{\r\n    try{\r\n      const data = await getPokemons();\r\n      console.log(data);\r\n    }catch (err) {\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPokemons();\r\n  }, []);\r\n\r\n    return (\r\n\r\n      <View style={styles.container}>\r\n        <Navbar />\r\n        <Buscador style={styles.buscador} />\r\n      <View>\r\n      <View style={styles.header}>\r\n        <Text style={styles.poke}>Pokedex</Text>\r\n        <Text style={styles.pagi}>Pagination</Text>\r\n     </View>\r\n       <FlatList style={styles.list}>\r\n\r\n       </FlatList>\r\n    </View>\r\n    </View>\r\n    )\r\n  }\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#141414',\r\n    padding: 20,\r\n    flex: 1 // Para que me ocupe todo el tamanio de la pantalla\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 10\r\n\r\n},\r\npoke:{\r\n    color: '#FFFFFF',\r\n    fontSize: 30\r\n},\r\npagi:{\r\n    color: '#FFFFFF'\r\n},\r\nlist:{\r\n    width: '90%',\r\n    color: '#FFFFFF'\r\n}\r\n});\r\n\r\nexport default PokemonsScreen;"]},"metadata":{},"sourceType":"module"}