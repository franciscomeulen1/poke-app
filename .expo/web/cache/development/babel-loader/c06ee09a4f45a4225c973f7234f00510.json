{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Navbar } from \"../components/Navbar\";\nimport Buscador from \"../components/Searchbar\";\nimport Pokedex from \"../components/Pokedex\";\nuseEffect(function () {\n  PokemonsScreen.getPokemons();\n}, []);\nexport var PokemonsScreen = function (_Component) {\n  _inherits(PokemonsScreen, _Component);\n\n  var _super = _createSuper(PokemonsScreen);\n\n  function PokemonsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, PokemonsScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      pokemons: []\n    };\n    return _this;\n  }\n\n  _createClass(PokemonsScreen, [{\n    key: \"setPokemons\",\n    value: function setPokemons(jsonPokemons) {\n      this.setState({\n        coins: jsonPokemons\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getPokemons();\n    }\n  }, {\n    key: \"getPokemons\",\n    value: function getPokemons() {\n      var limit,\n          offset,\n          url,\n          _args = arguments;\n      return _regeneratorRuntime.async(function getPokemons$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              limit = _args.length > 0 && _args[0] !== undefined ? _args[0] : 10;\n              offset = _args.length > 1 && _args[1] !== undefined ? _args[1] : 0;\n              _context.prev = 2;\n              url = \"https://pokeapi.co/api/v2/pokemon/?limit=\" + limit + \"&offset=\" + offset;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(axios.get(url).then(function (resp) {\n                return setPokemons(resp.data);\n              }));\n\n            case 6:\n              _context.next = 10;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](2);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 8]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(Navbar, null), React.createElement(Buscador, {\n        style: styles.buscador\n      }), React.createElement(Pokedex, {\n        pokemons: this.state.pokemons\n      }));\n    }\n  }]);\n\n  return PokemonsScreen;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#141414',\n    padding: 20,\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/franc/Desktop/4to Cuatri - Da Vinci/Aplicaciones MÃ³viles/poke-app/Screens/PokemonsScreen.js"],"names":["React","Component","Navbar","Buscador","Pokedex","useEffect","PokemonsScreen","getPokemons","props","state","pokemons","jsonPokemons","setState","coins","limit","offset","url","axios","get","then","resp","setPokemons","data","styles","container","buscador","StyleSheet","create","backgroundColor","padding","flex"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAIA,SAASC,MAAT;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;AAEAC,SAAS,CAAC,YAAM;AACdC,EAAAA,cAAc,CAACC,WAAf;AACD,CAFQ,EAEN,EAFM,CAAT;AAIA,WAAaD,cAAb;AAAA;;AAAA;;AACE,0BAAYE,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAFiB;AAGlB;;AAJH;AAAA;AAAA,WAKE,qBAAYC,YAAZ,EAA0B;AACxB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEF;AAAT,OAAd;AACD;AAPH;AAAA;AAAA,WAQE,6BAAoB;AACjB,WAAKJ,WAAL;AACF;AAVH;AAAA;AAAA,WAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkBO,cAAAA,KAAlB,2DAAwB,EAAxB;AAA4BC,cAAAA,MAA5B,2DAAmC,CAAnC;AAAA;AAEQC,cAAAA,GAFR,iDAE0DF,KAF1D,gBAE0EC,MAF1E;AAAA;AAAA,+CAGUE,KAAK,CAACC,GAAN,CAAUF,GAAV,EAAeG,IAAf,CAAoB,UAAAC,IAAI;AAAA,uBAAIC,WAAW,CAACD,IAAI,CAACE,IAAN,CAAf;AAAA,eAAxB,CAHV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA,WAsBE,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,SACE,oBAAC,MAAD,OADF,EAEE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAED,MAAM,CAACE;AAAxB,QAFF,EAGE,oBAAC,OAAD;AAAS,QAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWC;AAA9B,QAHF,CADF;AAOD;AA9BH;;AAAA;AAAA,EAAoCT,SAApC;AAiCA,IAAMsB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,eAAe,EAAE,SADR;AAETC,IAAAA,OAAO,EAAE,EAFA;AAGTC,IAAAA,IAAI,EAAE;AAHG;AADoB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// Cuando cargue la app, quiero hacer una peticion GET --> Usamos useEffect\r\nimport { View, Text, StyleSheet, StatusBar } from 'react-native';\r\nimport { Navbar } from '../components/Navbar';\r\nimport Buscador from '../components/Searchbar';\r\nimport Pokedex from '../components/Pokedex';\r\n\r\nuseEffect(() => {\r\n  PokemonsScreen.getPokemons();\r\n}, []);\r\n\r\nexport class PokemonsScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { pokemons: [] };\r\n  }\r\n  setPokemons(jsonPokemons) {\r\n    this.setState({ coins: jsonPokemons });\r\n  }\r\n  componentDidMount() {\r\n     this.getPokemons();\r\n  }\r\n  \r\n  async getPokemons(limit=10, offset=0) {\r\n    try {\r\n      let url = `https://pokeapi.co/api/v2/pokemon/?limit=${limit}&offset=${offset}`;\r\n      await axios.get(url).then(resp => setPokemons(resp.data));\r\n    } catch (err) {\r\n\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Navbar />\r\n        <Buscador style={styles.buscador} />\r\n        <Pokedex pokemons={this.state.pokemons}/>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#141414',\r\n    padding: 20,\r\n    flex: 1 // Para que me ocupe todo el tamanio de la pantalla\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}