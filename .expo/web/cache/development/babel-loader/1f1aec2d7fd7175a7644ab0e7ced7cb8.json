{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport { Navbar } from \"../components/Navbar\";\nimport Buscador from \"../components/Searchbar\";\nvar useState = React.useState,\n    useEffect = React.useEffect;\nexport var PokemonsScreen = function (_Component) {\n  _inherits(PokemonsScreen, _Component);\n\n  var _super = _createSuper(PokemonsScreen);\n\n  function PokemonsScreen() {\n    var _this;\n\n    _classCallCheck(this, PokemonsScreen);\n\n    _this.state = {\n      pokemons: []\n    };\n\n    _this.getPokemons();\n\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(PokemonsScreen, [{\n    key: \"setPokemons\",\n    value: function setPokemons(pokes) {\n      this.setState({\n        pokemons: pokes\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(Navbar, null), React.createElement(Buscador, {\n        style: styles.buscador\n      }), React.createElement(View, null, React.createElement(View, {\n        style: styles.header\n      }, React.createElement(Text, {\n        style: styles.poke\n      }, \"Pokedex\"), React.createElement(Text, {\n        style: styles.pagi\n      }, \"Pagination\")), React.createElement(FlatList, {\n        style: styles.list\n      })));\n    }\n  }]);\n\n  return PokemonsScreen;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#141414',\n    padding: 20,\n    flex: 1\n  },\n  header: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 10\n  },\n  poke: {\n    color: '#FFFFFF',\n    fontSize: 30\n  },\n  pagi: {\n    color: '#FFFFFF'\n  },\n  list: {\n    width: '90%',\n    color: '#FFFFFF'\n  }\n});","map":{"version":3,"sources":["C:/Users/franc/Desktop/4to Cuatri - Da Vinci/Aplicaciones MÃ³viles/poke-app/Screens/PokemonsScreen.js"],"names":["React","Component","Navbar","Buscador","useState","useEffect","PokemonsScreen","state","pokemons","getPokemons","pokes","setState","styles","container","buscador","header","poke","pagi","list","StyleSheet","create","backgroundColor","padding","flex","display","flexDirection","justifyContent","alignItems","color","fontSize","width"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;AAIA,SAASC,MAAT;AACA,OAAOC,QAAP;AAEA,IAAOC,QAAP,GAA8BJ,KAA9B,CAAOI,QAAP;AAAA,IAAiBC,SAAjB,GAA8BL,KAA9B,CAAiBK,SAAjB;AAEA,WAAaC,cAAb;AAAA;;AAAA;;AAEE,4BAAa;AAAA;;AAAA;;AACX,UAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;;AACA,UAAKC,WAAL;;AAFW;AAGZ;;AALH;AAAA;AAAA,WAOE,qBAAYC,KAAZ,EAAmB;AACjB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAEE;AAAZ,OAAd;AACD;AATH;AAAA;AAAA,WAuBE,kBAAS;AACP,aAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACC;AAApB,SACE,oBAAC,MAAD,OADF,EAEE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAED,MAAM,CAACE;AAAxB,QAFF,EAGA,oBAAC,IAAD,QACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG;AAApB,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,mBADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK;AAApB,sBAFF,CADA,EAKC,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEL,MAAM,CAACM;AAAxB,QALD,CAHA,CAFF;AAgBD;AAxCH;;AAAA;AAAA,EAAoCjB,SAApC;AA4CA,IAAMW,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,eAAe,EAAE,SADR;AAETC,IAAAA,OAAO,EAAE,EAFA;AAGTC,IAAAA,IAAI,EAAE;AAHG,GADoB;AAM/BR,EAAAA,MAAM,EAAE;AACNS,IAAAA,OAAO,EAAE,MADH;AAENC,IAAAA,aAAa,EAAE,KAFT;AAGNC,IAAAA,cAAc,EAAE,eAHV;AAINC,IAAAA,UAAU,EAAE,QAJN;AAKNL,IAAAA,OAAO,EAAE;AALH,GANuB;AAcjCN,EAAAA,IAAI,EAAC;AACDY,IAAAA,KAAK,EAAE,SADN;AAEDC,IAAAA,QAAQ,EAAE;AAFT,GAd4B;AAkBjCZ,EAAAA,IAAI,EAAC;AACDW,IAAAA,KAAK,EAAE;AADN,GAlB4B;AAqBjCV,EAAAA,IAAI,EAAC;AACDY,IAAAA,KAAK,EAAE,KADN;AAEDF,IAAAA,KAAK,EAAE;AAFN;AArB4B,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// Cuando cargue la app, quiero hacer una peticion GET --> Usamos useEffect\r\nimport { View, Text, StyleSheet, StatusBar, FlatList, PanResponder } from 'react-native';\r\nimport { Navbar } from '../components/Navbar';\r\nimport Buscador from '../components/Searchbar';\r\n\r\nconst {useState, useEffect} = React;\r\n\r\nexport class PokemonsScreen extends Component {\r\n\r\n  constructor(){\r\n    this.state = { pokemons: [] };\r\n    this.getPokemons();\r\n  }\r\n\r\n  setPokemons(pokes) {\r\n    this.setState({ pokemons: pokes });\r\n  }\r\n\r\n  getPokemons = async (limit=10, offset=0) => {\r\n    try {\r\n      let url = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`;\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      console.log(data);\r\n      setPokemons(data.results);\r\n      console.log(pokemons);\r\n    } catch (err) {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <View style={styles.container}>\r\n        <Navbar />\r\n        <Buscador style={styles.buscador} />\r\n      <View>\r\n      <View style={styles.header}>\r\n        <Text style={styles.poke}>Pokedex</Text>\r\n        <Text style={styles.pagi}>Pagination</Text>\r\n     </View>\r\n       <FlatList style={styles.list}>\r\n\r\n       </FlatList>\r\n    </View>\r\n    </View>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#141414',\r\n    padding: 20,\r\n    flex: 1 // Para que me ocupe todo el tamanio de la pantalla\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 10\r\n\r\n},\r\npoke:{\r\n    color: '#FFFFFF',\r\n    fontSize: 30\r\n},\r\npagi:{\r\n    color: '#FFFFFF'\r\n},\r\nlist:{\r\n    width: '90%',\r\n    color: '#FFFFFF'\r\n}\r\n});"]},"metadata":{},"sourceType":"module"}