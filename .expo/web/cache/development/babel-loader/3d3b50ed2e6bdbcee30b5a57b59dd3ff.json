{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Navbar } from \"../components/Navbar\";\nimport Buscador from \"../components/Searchbar\";\nimport Pokedex from \"../components/Pokedex\";\nvar useState = React.useState,\n    useEffect = React.useEffect;\n\nvar PokemonsScreen = function PokemonsScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      pokemons = _useState2[0],\n      setPokemons = _useState2[1];\n\n  var getPokemons = function getPokemons() {\n    var limit,\n        offset,\n        _args = arguments;\n    return _regeneratorRuntime.async(function getPokemons$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            limit = _args.length > 0 && _args[0] !== undefined ? _args[0] : 10;\n            offset = _args.length > 1 && _args[1] !== undefined ? _args[1] : 0;\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.get(\"https://pokeapi.co/api/v2/pokemon/?limit=\" + limit + \"&offset=\" + offset).then(function (resp) {\n              return setPokemons(resp.data.results);\n            }));\n\n          case 5:\n            _context.next = 9;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](2);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 7]], Promise);\n  };\n\n  useEffect(function () {\n    getPokemons();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Navbar, null), React.createElement(Buscador, {\n    style: styles.buscador\n  }), React.createElement(Pokedex, {\n    pokemons: pokemons\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#141414',\n    padding: 20,\n    flex: 1\n  }\n});\nexport default PokemonsScreen;","map":{"version":3,"sources":["C:/Users/franc/Desktop/4to Cuatri - Da Vinci/Aplicaciones MÃ³viles/poke-app/Screens/PokemonsScreen.js"],"names":["React","Component","Navbar","Buscador","Pokedex","useState","useEffect","PokemonsScreen","pokemons","setPokemons","getPokemons","limit","offset","axios","get","then","resp","data","results","styles","container","buscador","StyleSheet","create","backgroundColor","padding","flex"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAIA,SAASC,MAAT;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;AAEA,IAAOC,QAAP,GAA8BL,KAA9B,CAAOK,QAAP;AAAA,IAAiBC,SAAjB,GAA8BN,KAA9B,CAAiBM,SAAjB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAE5B,kBAAgCF,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAiBC,WAAjB;;AAEC,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,YAAAA,KAAP,2DAAa,EAAb;AAAiBC,YAAAA,MAAjB,2DAAwB,CAAxB;AAAA;AAAA;AAAA,6CAEVC,KAAK,CAACC,GAAN,+CAAsDH,KAAtD,gBAAsEC,MAAtE,EAAgFG,IAAhF,CAAqF,UAAAC,IAAI;AAAA,qBAAIP,WAAW,CAACO,IAAI,CAACC,IAAL,CAAUC,OAAX,CAAf;AAAA,aAAzF,CAFU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAOAZ,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIE,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACC;AAApB,KACE,oBAAC,MAAD,OADF,EAEE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAED,MAAM,CAACE;AAAxB,IAFF,EAGE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEb;AAAnB,IAHF,CADF;AAOD,CAtBH;;AAyBA,IAAMW,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,eAAe,EAAE,SADR;AAETC,IAAAA,OAAO,EAAE,EAFA;AAGTC,IAAAA,IAAI,EAAE;AAHG;AADoB,CAAlB,CAAf;AAQA,eAAenB,cAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// Cuando cargue la app, quiero hacer una peticion GET --> Usamos useEffect\r\nimport { View, Text, StyleSheet, StatusBar } from 'react-native';\r\nimport { Navbar } from '../components/Navbar';\r\nimport Buscador from '../components/Searchbar';\r\nimport Pokedex from '../components/Pokedex';\r\n\r\nconst {useState, useEffect} = React;\r\n\r\nconst PokemonsScreen = () => {\r\n\r\n const [pokemons, setPokemons] = useState([]);\r\n\r\n  const getPokemons = async (limit=10, offset=0) => {\r\n    try {\r\n      await axios.get(`https://pokeapi.co/api/v2/pokemon/?limit=${limit}&offset=${offset}`).then(resp => setPokemons(resp.data.results));\r\n    } catch (err) {\r\n\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getPokemons();\r\n  }, []);\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <Navbar />\r\n        <Buscador style={styles.buscador} />\r\n        <Pokedex pokemons={pokemons}/>\r\n      </View>\r\n    )\r\n  }\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#141414',\r\n    padding: 20,\r\n    flex: 1 // Para que me ocupe todo el tamanio de la pantalla\r\n  }\r\n});\r\n\r\nexport default PokemonsScreen;"]},"metadata":{},"sourceType":"module"}